name: AWSEBSDeploy


on:
  workflow_call:
    inputs:
      application_name:
        required: true
        type: string     
      docker_compose_file:
        required: true
        type: string     
      environment_name:
        required: true
        type: string
      region:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true
      POSTGRES_CONNECTION_STRING:
        required: true

jobs:
  aws-ebs-deploy:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      POSTGRES_CONNECTION_STRING: ${{ secrets.POSTGRES_CONNECTION_STRING }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get current time
        uses: gerred/actions/current-time@master
        id: current-time
      - name: Prepare docker-compose file for deployment
        run: sh ./scripts/docker-compose/prepare-ebs-deployment.sh
      - name: Rename docker-compose file
        run: mv ${{ inputs.docker_compose_file }} docker-compose.yml
      - name: Generate deployment package
        run: zip -r deploy.zip docker-compose.yml
      - name: Archive docker-compose file
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose
          path: docker-compose.yml
      - name: Archive deployment package
        uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: deploy.zip
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ inputs.application_name }}
          environment_name: ${{ inputs.environment_name }}
          version_label: ${{ steps.current-time.outputs.time }}
          region: ${{ inputs.region }}
          deployment_package: deploy.zip
